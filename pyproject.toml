[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "media-lens"
version = "1.6.1"
description = "Comparative analysis of media worldviews through automated headline and content analysis"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Dan Cripe" }
]
license = { text = "MIT" }

dependencies = [
    "anthropic==0.46.0",
    "beautifulsoup4==4.13.3",
    "blinker==1.9.0",
    "bs4==0.0.2",
    "cachetools==5.5.2",
    "click==8.1.8",
    "dateparser==1.2.1",
    "deptry==0.23.0",
    "Flask==2.3.3",
    "google-api-core==2.24.2",
    "google-auth==2.38.0",
    "google-cloud-core==2.4.3",
    "google-cloud-secret-manager==2.16.4",
    "google-cloud-storage==2.13.0",
    "google-cloud-aiplatform==1.71.1",
    "google-crc32c==1.7.1",
    "google-resumable-media==2.7.2",
    "googleapis-common-protos==1.69.2",
    "grpc-google-iam-v1==0.14.2",
    "grpcio==1.71.0",
    "grpcio-status==1.62.3",
    "gunicorn==23.0.0",
    "itsdangerous==2.2.0",
    "Jinja2==3.1.6",
    "litellm>=1.0.0",
    "packaging==25.0",
    "paramiko==3.5.1",
    "pathlib==1.0.1",
    "psutil==6.1.1",
    "playwright==1.40.0",
    "playwright-stealth==1.0.6",
    "proto-plus==1.26.1",
    "protobuf>=4.25.8",
    "pyasn1==0.6.1",
    "pyasn1_modules==0.4.2",
    "python-dotenv==1.0.1",
    "pytz==2025.1",
    "regex==2024.11.6",
    "requirements-parser==0.13.0",
    "requests>=2.32.4",
    "rsa==4.9",
    "schedule==1.2.2",
    "setuptools==80.9.0",
    "tenacity==9.0.0",
    "trafilatura==2.0.0",
    "Werkzeug==3.1.3",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.0.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.5.6",
]

[tool.uv]
dev-dependencies = [
    "pre-commit>=4.0.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.5.6",
]

[tool.ruff]
line-length = 100
target-version = "py38"
include = ["src/**/*.py", "test/**/*.py"]
exclude = [
    ".git",
    ".venv",
    ".pytest_cache",
    ".idea",
    "__pycache__",
    "node_modules",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "RUF",    # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "W605",   # invalid escape sequence
]

[tool.ruff.lint.isort]
known-first-party = ["src"]
combine-as-imports = true


[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "asyncio: mark a test as an asyncio test.",
    "slow: mark test as slow.",
    "integration: mark test as integration test.",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
addopts = "--strict-markers -v"
